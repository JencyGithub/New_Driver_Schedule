# Generated by Django 5.0.1 on 2024-03-09 21:58

import datetime
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Account_app', '0012_drivershift_archive_drivershift_endtimeutc_and_more'),
        ('GearBox_app', '0029_alter_clienttruckconnection_startdate_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='drivershift',
            name='lastEmailTime',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='drivershifttrip',
            name='lastEmailTime',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='driverbreak',
            name='breakFile',
            field=models.FileField(null=True, upload_to='static/img/breakFiles'),
        ),
        migrations.AlterField(
            model_name='driverdocket',
            name='shiftDate',
            field=models.DateField(default=datetime.datetime(2024, 3, 9, 21, 58, 35, 497781), null=True),
        ),
        migrations.AlterField(
            model_name='driverreimbursement',
            name='reimbursementFile',
            field=models.FileField(blank=True, null=True, upload_to='static/img/reimbursementFiles'),
        ),
        migrations.AlterField(
            model_name='drivershift',
            name='locationImg',
            field=models.FileField(null=True, upload_to='static/Account/driverLocationFiles'),
        ),
        migrations.AlterField(
            model_name='escalationdocket',
            name='invoiceFile',
            field=models.FileField(blank=True, null=True, upload_to='static/Account/manuallyEscalation'),
        ),
        migrations.AlterField(
            model_name='escalationmail',
            name='mailAttachment',
            field=models.FileField(blank=True, null=True, upload_to='static/img/mailAttachment'),
        ),
        migrations.CreateModel(
            name='HistoricalBasePlant',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('basePlant', models.CharField(db_index=True, max_length=200)),
                ('address', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', max_length=20)),
                ('personOnName', models.CharField(default='', max_length=25)),
                ('managerName', models.CharField(default='', max_length=25)),
                ('lat', models.CharField(default='', max_length=20)),
                ('long', models.CharField(default='', max_length=20)),
                ('clientDepot', models.BooleanField(default=False)),
                ('clientBasePlant', models.BooleanField(default=False)),
                ('depotCode', models.CharField(default='', max_length=100, null=True)),
                ('email', models.CharField(default='', max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('clientOfficeId', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.clientoffice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical base plant',
                'verbose_name_plural': 'historical base plants',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDriverBreak',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('startDateTime', models.DateTimeField(default='', null=True)),
                ('endDateTime', models.DateTimeField(default='', null=True)),
                ('breakFile', models.TextField(max_length=100, null=True)),
                ('durationInMinutes', models.FloatField(default=0, null=True)),
                ('location', models.CharField(default='', max_length=2048, null=True)),
                ('description', models.CharField(default='', max_length=2048, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('driverId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.driver')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('shiftId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.drivershift')),
            ],
            options={
                'verbose_name': 'historical driver break',
                'verbose_name_plural': 'historical driver breaks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDriverReimbursement',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('raiseDate', models.DateTimeField(blank=True, default=None, null=True)),
                ('notes', models.CharField(blank=True, default='', max_length=2048, null=True)),
                ('amount', models.FloatField(default=0)),
                ('reimbursementFile', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('driverId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.driver')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('shiftId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.drivershift')),
            ],
            options={
                'verbose_name': 'historical driver reimbursement',
                'verbose_name_plural': 'historical driver reimbursements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDriverShift',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('shiftType', models.CharField(choices=[('Day', 'Day'), ('Night', 'Night')], default='Day', max_length=200)),
                ('latitude', models.CharField(blank=True, max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, max_length=20, null=True)),
                ('shiftDate', models.DateField(blank=True, null=True)),
                ('startDateTime', models.DateTimeField(blank=True, null=True)),
                ('endDateTime', models.DateTimeField(blank=True, null=True)),
                ('driverId', models.IntegerField(blank=True, null=True)),
                ('locationImg', models.TextField(max_length=100, null=True)),
                ('startTimeUTC', models.DateTimeField(null=True)),
                ('endTimeUTC', models.DateTimeField(null=True)),
                ('archive', models.BooleanField(default=False)),
                ('lastEmailTime', models.DateTimeField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('verifiedBy', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical driver shift',
                'verbose_name_plural': 'historical driver shifts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDriverShiftDocket',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tripId', models.PositiveIntegerField(blank=True, null=True)),
                ('shiftId', models.IntegerField(blank=True, null=True)),
                ('shiftDate', models.DateField(blank=True, null=True)),
                ('clientId', models.IntegerField(blank=True, null=True)),
                ('truckConnectionId', models.IntegerField(blank=True, null=True)),
                ('docketNumber', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('docketFile', models.TextField(blank=True, max_length=100, null=True)),
                ('basePlant', models.PositiveIntegerField(blank=True, null=True)),
                ('noOfKm', models.FloatField(default=0)),
                ('transferKM', models.FloatField(default=0)),
                ('returnToYard', models.BooleanField(default=False)),
                ('tippingToYard', models.BooleanField(default=False)),
                ('returnQty', models.FloatField(default=0)),
                ('returnKm', models.FloatField(default=0)),
                ('waitingTimeStart', models.TimeField(blank=True, default=None, null=True)),
                ('waitingTimeEnd', models.TimeField(blank=True, default=None, null=True)),
                ('totalWaitingInMinute', models.FloatField(default=0)),
                ('surchargeType', models.IntegerField(blank=True, null=True)),
                ('surcharge_duration', models.FloatField(default=0)),
                ('cubicMl', models.FloatField(default=0)),
                ('standByStartTime', models.TimeField(blank=True, default=None, null=True)),
                ('standByEndTime', models.TimeField(blank=True, default=None, null=True)),
                ('standBySlot', models.PositiveIntegerField(default=0, null=True)),
                ('blowBack', models.CharField(default='', max_length=2048, null=True)),
                ('callOut', models.CharField(default='', max_length=2048, null=True)),
                ('minimumLoad', models.FloatField(default=0)),
                ('others', models.FloatField(default=0)),
                ('comment', models.CharField(default='', max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical driver shift docket',
                'verbose_name_plural': 'historical driver shift dockets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDriverShiftTrip',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('shiftId', models.IntegerField(blank=True, null=True)),
                ('startDateTime', models.DateTimeField(blank=True, null=True)),
                ('endDateTime', models.DateTimeField(blank=True, null=True)),
                ('clientId', models.IntegerField(blank=True, null=True)),
                ('truckConnectionId', models.IntegerField(blank=True, null=True)),
                ('dispute', models.BooleanField(default=False)),
                ('numberOfLoads', models.FloatField(default=0)),
                ('revenueDeficit', models.FloatField(default=0)),
                ('loadSheet', models.TextField(blank=True, max_length=100, null=True)),
                ('comment', models.CharField(default='None', max_length=200)),
                ('startTimeUTC', models.DateTimeField(null=True)),
                ('endTimeUTC', models.DateTimeField(null=True)),
                ('archive', models.BooleanField(default=False)),
                ('startOdometerKms', models.FloatField(default=0, null=True)),
                ('endOdometerKms', models.FloatField(default=0, null=True)),
                ('startEngineHours', models.FloatField(default=0, null=True)),
                ('endEngineHours', models.FloatField(default=0, null=True)),
                ('lastEmailTime', models.DateTimeField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical driver shift trip',
                'verbose_name_plural': 'historical driver shift trips',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEscalation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('escalationDate', models.DateField(default=None, null=True)),
                ('escalationType', models.CharField(default='', max_length=20)),
                ('remark', models.CharField(default='', max_length=1024)),
                ('escalationStep', models.PositiveIntegerField(default=1)),
                ('escalationAmount', models.FloatField(default=0)),
                ('errorId', models.PositiveIntegerField(default=None, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('clientName', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('userId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical escalation',
                'verbose_name_plural': 'historical escalations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEscalationDocket',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('docketNumber', models.CharField(default=None, max_length=10)),
                ('docketDate', models.DateField(default=None, null=True)),
                ('amount', models.FloatField(default=0)),
                ('remark', models.CharField(default='', max_length=1024)),
                ('invoiceFile', models.TextField(blank=True, max_length=100, null=True)),
                ('callOut', models.BooleanField(default=False)),
                ('callOutCharge', models.FloatField(blank=True, default=0, null=True)),
                ('demurrage', models.BooleanField(default=False)),
                ('demurrageCharge', models.FloatField(blank=True, default=0, null=True)),
                ('cancellation', models.BooleanField(default=False)),
                ('cancellationCharge', models.FloatField(blank=True, default=0, null=True)),
                ('transferKm', models.BooleanField(default=False)),
                ('transferKmCharge', models.FloatField(blank=True, default=0, null=True)),
                ('waitingTime', models.BooleanField(default=False)),
                ('waitingTimeCharge', models.FloatField(blank=True, default=0, null=True)),
                ('standBy', models.BooleanField(default=False)),
                ('standByCharge', models.FloatField(blank=True, default=0, null=True)),
                ('returnKm', models.BooleanField(default=False)),
                ('returnKmCharge', models.FloatField(blank=True, default=0, null=True)),
                ('surcharge', models.BooleanField(default=False)),
                ('surchargeCharge', models.FloatField(blank=True, default=0, null=True)),
                ('loadKm', models.BooleanField(default=False)),
                ('loadKmCharge', models.FloatField(blank=True, default=0, null=True)),
                ('blowBack', models.BooleanField(default=False)),
                ('blowBackCharge', models.FloatField(blank=True, default=0, null=True)),
                ('custom', models.BooleanField(default=False)),
                ('customCharge', models.FloatField(blank=True, default=0, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('escalationId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.escalation')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('truckNo', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.clienttruckconnection')),
            ],
            options={
                'verbose_name': 'historical escalation docket',
                'verbose_name_plural': 'historical escalation dockets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEscalationMail',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('mailTo', models.CharField(default=None, max_length=50)),
                ('mailFrom', models.CharField(default=None, max_length=50)),
                ('mailSubject', models.CharField(default=None, max_length=255)),
                ('mailDescription', models.CharField(default=None, max_length=1024)),
                ('mailAttachment', models.TextField(blank=True, max_length=100, null=True)),
                ('mailType', models.CharField(choices=[('Send', 'Send'), ('Receive', 'Receive')], default='Send', max_length=20)),
                ('mailDate', models.DateField(default=None, null=True)),
                ('mailCount', models.PositiveBigIntegerField(default=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('escalationId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.escalation')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('userId', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical escalation mail',
                'verbose_name_plural': 'historical escalation mails',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHolcimDocket',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('truckNo', models.FloatField(default=0)),
                ('jobNo', models.FloatField(default=0)),
                ('orderNo', models.FloatField(default=0)),
                ('ticketed', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('load', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('loadComplete', models.CharField(max_length=200)),
                ('toJob', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('timeToDepart', models.FloatField(default=0)),
                ('onJob', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('timeToSite', models.FloatField(default=0)),
                ('beginUnload', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('waitingTime', models.FloatField(default=0)),
                ('endPour', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('wash', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('toPlant', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('atPlant', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('leadDistance', models.FloatField(default=0)),
                ('returnDistance', models.FloatField(default=0)),
                ('totalDistance', models.FloatField(default=0)),
                ('totalTime', models.FloatField(default=0)),
                ('waitTimeBetweenJob', models.FloatField(default=0)),
                ('quantity', models.FloatField(default=0)),
                ('slump', models.FloatField(default=0)),
                ('waterAdded', models.FloatField(default=0)),
                ('docketDate', models.DateField(default=None, null=True)),
                ('materialCode', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('customerName', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('loadSize', models.FloatField(default=0)),
                ('timeOnSite', models.FloatField(default=0)),
                ('distanceInKm', models.FloatField(default=0)),
                ('requestedKm', models.FloatField(default=0)),
                ('reasonRequested', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('returnedQty', models.FloatField(default=0)),
                ('dischargeLocation', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('additionalKm', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('basePlant', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.baseplant')),
                ('driverName', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.driver')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tripId', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.holcimtrip')),
            ],
            options={
                'verbose_name': 'historical holcim docket',
                'verbose_name_plural': 'historical holcim dockets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHolcimTrip',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('truckNo', models.PositiveBigIntegerField(default=0)),
                ('shiftDate', models.DateField(default=None, null=True)),
                ('numberOfLoads', models.FloatField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical holcim trip',
                'verbose_name_plural': 'historical holcim trips',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPastTripError',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('clientName', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('tripDate', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('truckNo', models.IntegerField(default=0)),
                ('docketNumber', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('lineNumber', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('errorFromPastTrip', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('exceptionText', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('fileName', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('status', models.BooleanField(default=False)),
                ('errorType', models.FloatField(default=0)),
                ('data', models.CharField(default=' ', max_length=2048)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical past trip error',
                'verbose_name_plural': 'historical past trip errors',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPublicHoliday',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField()),
                ('stateName', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical public holiday',
                'verbose_name_plural': 'historical public holidays',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRCTI',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('truckNo', models.FloatField(default=0)),
                ('docketNumber', models.CharField(default='', max_length=10)),
                ('docketDate', models.DateField()),
                ('docketYard', models.CharField(default='', max_length=255)),
                ('noOfKm', models.FloatField(default=0)),
                ('cubicMl', models.FloatField(default=0)),
                ('cubicMiAndKmsCost', models.FloatField(default=0)),
                ('destination', models.CharField(default='Not given', max_length=255)),
                ('cartageGSTPayable', models.FloatField(default=0)),
                ('cartageTotalExGST', models.FloatField(default=0)),
                ('cartageTotal', models.FloatField(default=0)),
                ('unit', models.CharField(default='', max_length=10)),
                ('paidQty', models.FloatField(default=0)),
                ('transferKM', models.FloatField(default=0)),
                ('transferKMCost', models.FloatField(default=0)),
                ('transferKMGSTPayable', models.FloatField(default=0)),
                ('transferKMTotalExGST', models.FloatField(default=0)),
                ('transferKMTotal', models.FloatField(default=0)),
                ('returnKm', models.FloatField(default=0)),
                ('returnPerKmPerCubicMeterCost', models.FloatField(default=0)),
                ('returnKmGSTPayable', models.FloatField(default=0)),
                ('returnKmTotalExGST', models.FloatField(default=0)),
                ('returnKmTotal', models.FloatField(default=0)),
                ('waitingTimeSCHED', models.FloatField(default=0)),
                ('waitingTimeSCHEDCost', models.FloatField(default=0)),
                ('waitingTimeSCHEDGSTPayable', models.FloatField(default=0)),
                ('waitingTimeSCHEDTotalExGST', models.FloatField(default=0)),
                ('waitingTimeSCHEDTotal', models.FloatField(default=0)),
                ('waitingTimeInMinutes', models.FloatField(default=0)),
                ('waitingTimeCost', models.FloatField(default=0)),
                ('waitingTimeGSTPayable', models.FloatField(default=0)),
                ('waitingTimeTotalExGST', models.FloatField(default=0)),
                ('waitingTimeTotal', models.FloatField(default=0)),
                ('standByNoSlot', models.FloatField(default=0)),
                ('standByPerHalfHourDuration', models.FloatField(default=0)),
                ('standByUnit', models.CharField(choices=[('minute', 'MINUTE'), ('slot', 'SLOT')], default='minute', max_length=20)),
                ('standByGSTPayable', models.FloatField(default=0)),
                ('standByTotalExGST', models.FloatField(default=0)),
                ('standByTotal', models.FloatField(default=0)),
                ('minimumLoad', models.FloatField(default=0)),
                ('loadCost', models.FloatField(default=0)),
                ('minimumLoadGSTPayable', models.FloatField(default=0)),
                ('minimumLoadTotalExGST', models.FloatField(default=0)),
                ('minimumLoadTotal', models.FloatField(default=0)),
                ('blowBack', models.FloatField(default=0)),
                ('blowBackCost', models.FloatField(default=0)),
                ('blowBackGSTPayable', models.FloatField(default=0)),
                ('blowBackTotalExGST', models.FloatField(default=0)),
                ('blowBackTotal', models.FloatField(default=0)),
                ('callOut', models.FloatField(default=0)),
                ('callOutCost', models.FloatField(default=0)),
                ('callOutGSTPayable', models.FloatField(default=0)),
                ('callOutTotalExGST', models.FloatField(default=0)),
                ('callOutTotal', models.FloatField(default=0)),
                ('surcharge', models.FloatField(default=0)),
                ('surchargeCost', models.FloatField(default=0)),
                ('surchargeGSTPayable', models.FloatField(default=0)),
                ('surchargeTotalExGST', models.FloatField(default=0)),
                ('surchargeTotal', models.FloatField(default=0)),
                ('otherDescription', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('others', models.FloatField(default=0)),
                ('othersCost', models.FloatField(default=0)),
                ('othersGSTPayable', models.FloatField(default=0)),
                ('othersTotalExGST', models.FloatField(default=0)),
                ('othersTotal', models.FloatField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('clientName', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('rctiReport', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.rctireport')),
            ],
            options={
                'verbose_name': 'historical rcti',
                'verbose_name_plural': 'historical rctis',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRctiAdjustment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('truckNo', models.FloatField(default=0)),
                ('docketNumber', models.CharField(default='', max_length=10, null=True)),
                ('docketDate', models.DateField()),
                ('docketYard', models.CharField(default='', max_length=255, null=True)),
                ('description', models.CharField(default='', max_length=255, null=True)),
                ('noOfKm', models.FloatField(default=0)),
                ('invoiceQuantity', models.FloatField(default=0)),
                ('unit', models.CharField(default='', max_length=10, null=True)),
                ('unitPrice', models.FloatField(default=0)),
                ('totalExGST', models.FloatField(default=0)),
                ('GSTPayable', models.FloatField(default=0)),
                ('Total', models.FloatField(default=0)),
                ('surchargeCost', models.FloatField(default=0)),
                ('waitingTimeCost', models.FloatField(default=0)),
                ('transferKmCost', models.FloatField(default=0)),
                ('returnKmCost', models.FloatField(default=0)),
                ('otherCost', models.FloatField(default=0)),
                ('standByCost', models.FloatField(default=0)),
                ('loadDeficit', models.FloatField(default=0)),
                ('blowBack', models.FloatField(default=0)),
                ('callOut', models.FloatField(default=0)),
                ('cancellationCost', models.FloatField(default=0)),
                ('demurageCost', models.FloatField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('clientName', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('rctiReport', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Account_app.rctireport')),
            ],
            options={
                'verbose_name': 'historical rcti adjustment',
                'verbose_name_plural': 'historical rcti adjustments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRctiErrors',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('clientName', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('docketNumber', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('docketDate', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('truckNo', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('exceptionText', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('errorDescription', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('fileName', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('status', models.BooleanField(default=False)),
                ('data', models.CharField(default='', max_length=2048)),
                ('errorType', models.PositiveIntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rcti errors',
                'verbose_name_plural': 'historical rcti errorss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRctiExpense',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('truckNo', models.CharField(default='', max_length=10)),
                ('docketNumber', models.CharField(default='', max_length=10)),
                ('docketDate', models.DateField()),
                ('docketYard', models.CharField(default='', max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('paidKm', models.FloatField(default=0)),
                ('invoiceQuantity', models.FloatField(default=0)),
                ('unit', models.CharField(default='', max_length=100)),
                ('unitPrice', models.FloatField(default=0)),
                ('gstPayable', models.FloatField(default=0)),
                ('totalExGST', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('clientName', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rcti expense',
                'verbose_name_plural': 'historical rcti expenses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRctiReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('reportDate', models.DateField()),
                ('gstPayable', models.FloatField(default=0)),
                ('totalExGST', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('fileName', models.CharField(default='', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('clientName', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='GearBox_app.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical rcti report',
                'verbose_name_plural': 'historical rcti reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReconciliationReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('docketNumber', models.CharField(default='', max_length=10)),
                ('docketDate', models.DateField(blank=True, default=None, null=True)),
                ('driverId', models.PositiveIntegerField(default=0)),
                ('clientId', models.PositiveIntegerField(default=0)),
                ('truckConnectionId', models.PositiveIntegerField(default=0)),
                ('reconciliationType', models.PositiveIntegerField(default=0)),
                ('missingComponent', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('fromDriver', models.BooleanField(default=False)),
                ('fromRcti', models.BooleanField(default=False)),
                ('driverLoadAndKmCost', models.FloatField(default=0)),
                ('rctiLoadAndKmCost', models.FloatField(default=0)),
                ('driverSurchargeCost', models.FloatField(default=0)),
                ('rctiSurchargeCost', models.FloatField(default=0)),
                ('driverWaitingTimeCost', models.FloatField(default=0)),
                ('rctiWaitingTimeCost', models.FloatField(default=0)),
                ('driverTransferKmCost', models.FloatField(default=0)),
                ('rctiTransferKmCost', models.FloatField(default=0)),
                ('driverReturnKmCost', models.FloatField(default=0)),
                ('rctiReturnKmCost', models.FloatField(default=0)),
                ('driverOtherCost', models.FloatField(default=0)),
                ('rctiOtherCost', models.FloatField(default=0)),
                ('driverStandByCost', models.FloatField(default=0)),
                ('rctiStandByCost', models.FloatField(default=0)),
                ('driverLoadDeficit', models.FloatField(default=0)),
                ('rctiLoadDeficit', models.FloatField(default=0)),
                ('driverBlowBack', models.FloatField(default=0)),
                ('rctiBlowBack', models.FloatField(default=0)),
                ('driverCallOut', models.FloatField(default=0)),
                ('rctiCallOut', models.FloatField(default=0)),
                ('driverCancellationCost', models.FloatField(default=0)),
                ('rctiCancellatioCost', models.FloatField(default=0)),
                ('driverDemurageCost', models.FloatField(default=0)),
                ('rctiDemurageCost', models.FloatField(default=0)),
                ('driverTotalCost', models.FloatField(default=0)),
                ('rctiTotalCost', models.FloatField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical reconciliation report',
                'verbose_name_plural': 'historical reconciliation reports',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
